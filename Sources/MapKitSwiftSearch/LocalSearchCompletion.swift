//
//  LocalSearchCompletion.swift
//  MapKitSwiftSearch
//
//  Created by Kraig Spear on 12/26/24.
//

import MapKit

/// A thread-safe representation of a location search completion result.
///
/// `LocalSearchCompletion` provides a Sendable-compliant wrapper around MapKit's
/// `MKLocalSearchCompletion` that can be safely passed between concurrent contexts.
/// It includes highlight range information for both title and subtitle text,
/// enabling proper text styling in search result interfaces.
///
/// This struct bridges MapKit's delegate-based search API with modern Swift concurrency,
/// ensuring that search results can be processed and displayed efficiently across
/// different concurrent contexts without thread safety concerns.
///
/// Example usage:
/// ```swift
/// // Created internally by LocationSearch from MKLocalSearchCompletion
/// let completion: LocalSearchCompletion = // ... from search results
///
/// // Access basic information
/// print("Title: \(completion.title)")
/// print("Subtitle: \(completion.subTitle)")
///
/// // Use highlight ranges for styling (platform-specific extensions)
/// let highlightedTitle = completion.highlightedTitle()
/// let highlightedSubtitle = completion.highlightedSubTitle()
/// ```
public struct LocalSearchCompletion: Identifiable, Equatable, Sendable, Hashable, CustomStringConvertible {
    /// A unique identifier for this search completion.
    ///
    /// Generated by combining the title and subtitle text to create a stable
    /// identifier that can be used in SwiftUI Lists and other UI frameworks
    /// that require Identifiable conformance.
    public let id: String

    /// The primary text of the search result.
    ///
    /// This typically contains the name of the location or point of interest,
    /// such as "Starbucks" or "Central Park".
    public let title: String

    /// The secondary descriptive text providing additional context.
    ///
    /// This usually contains address information or category details,
    /// such as "123 Main St, New York, NY" or "Coffee Shop".
    public let subTitle: String

    /// The range within the title text that should be highlighted.
    ///
    /// MapKit provides this information to indicate which portion of the title
    /// matches the user's search query. Used by platform-specific extensions
    /// to apply appropriate text styling.
    public let titleHighlightRange: HighlightRange?

    /// The range within the subtitle text that should be highlighted.
    ///
    /// Similar to titleHighlightRange, this indicates which portion of the
    /// subtitle matches the search query for proper highlighting.
    public let subtitleHighlightRange: HighlightRange?

    // MARK: - Initialization

    /// Creates a LocalSearchCompletion from MapKit's MKLocalSearchCompletion.
    ///
    /// This initializer converts MapKit's completion result into a thread-safe format
    /// that can be used across concurrent contexts. It extracts the title, subtitle,
    /// and highlight range information from the MapKit object.
    ///
    /// The implementation focuses on the first highlight range for each text field
    /// because MapKit typically provides a single meaningful highlight per field,
    /// and this simplifies the API while covering the most common use cases.
    ///
    /// - Parameter searchCompletion: The MKLocalSearchCompletion object from MapKit's
    ///                              search completer delegate callbacks.
    init(_ searchCompletion: MKLocalSearchCompletion) {
        title = searchCompletion.title
        subTitle = searchCompletion.subtitle
        id = "\(title)-\(subTitle)"

        // Extract the first highlight range for title
        // MapKit can provide multiple ranges, but the first is typically the most relevant
        titleHighlightRange = searchCompletion.titleHighlightRanges.first.map {
            HighlightRange(nsValue: $0)
        }

        // Extract the first highlight range for subtitle
        subtitleHighlightRange = searchCompletion.subtitleHighlightRanges.first.map {
            HighlightRange(nsValue: $0)
        }
    }

    // MARK: - CustomStringConvertible

    /// A textual representation of the search completion for debugging purposes.
    ///
    /// Provides a clear, readable format showing both the title and subtitle
    /// of the search result, useful for logging and debugging search operations.
    ///
    /// - Returns: A string in the format "LocalSearchCompletion(title, subtitle)".
    public var description: String {
        "LocalSearchCompletion(\(title), \(subTitle))"
    }
}
